#!/bin/bash
source "$(dirname "$(cd "$(dirname "${BASH_SOURCE[0]}")" && pwd)")/config"
source "$(dirname "$(cd "$(dirname "${BASH_SOURCE[0]}")" && pwd)")/functions"

dns_provider_aws_validate_credentials() {
    return 0
}

dns_provider_aws_setup_env() {
    return 0
}

dns_provider_aws_sync_app() {
    local APP="$1"
    local PLUGIN_DATA_ROOT="${DNS_ROOT:-${DOKKU_LIB_ROOT:-/var/lib/dokku}/services/dns}"
    local APP_DOMAINS_FILE="$PLUGIN_DATA_ROOT/$APP/DOMAINS"
    local APP_DOMAINS=""
    
    if [[ -f "$APP_DOMAINS_FILE" ]]; then
        APP_DOMAINS=$(tr '\n' ' ' < "$APP_DOMAINS_FILE" 2>/dev/null)
    fi
    
    if [[ -z "$APP_DOMAINS" ]]; then
        echo "No DNS-managed domains found for app: $APP"
        return 0
    fi
    
    echo "Syncing domains for app '$APP' to server IP: 1.2.3.4"
    
    # Check if zone management is enabled (ENABLED_ZONES file exists)
    local ENABLED_ZONES_FILE="$PLUGIN_DATA_ROOT/ENABLED_ZONES"
    local ZONE_CHECKING_ENABLED=false
    if [[ -f "$ENABLED_ZONES_FILE" ]]; then
        ZONE_CHECKING_ENABLED=true
    fi
    
    # Sync each domain (with conditional zone checking)
    local domains_synced=0
    local domains_skipped=0
    local skipped_domains=()
    
    for DOMAIN in $APP_DOMAINS; do
        [[ -z "$DOMAIN" ]] && continue
        
        # Check if domain should be synced (zone checking only if enabled)
        local should_sync=true
        if [[ "$ZONE_CHECKING_ENABLED" == true ]]; then
            if ! is_domain_in_enabled_zone "$DOMAIN"; then
                should_sync=false
            fi
        fi
        
        if [[ "$should_sync" == true ]]; then
            echo "Syncing domain: $DOMAIN"
            echo "DNS record created: $DOMAIN -> 1.2.3.4"
            domains_synced=$((domains_synced + 1))
        else
            echo "Skipping domain '$DOMAIN' - not in an enabled hosted zone"
            skipped_domains+=("$DOMAIN")
            domains_skipped=$((domains_skipped + 1))
        fi
    done
    
    # Show zone checking summary if applicable
    if [[ "$ZONE_CHECKING_ENABLED" == true ]] && [[ $domains_skipped -gt 0 ]]; then
        echo
        echo "Skipped $domains_skipped domain(s) not in enabled zones:"
        for skipped_domain in "${skipped_domains[@]}"; do
            echo "• $skipped_domain"
        done
        echo
        echo "To enable zones for these domains:"
        echo "• List available zones: dokku $PLUGIN_COMMAND_PREFIX:zones"
        echo "• Enable specific zone: dokku $PLUGIN_COMMAND_PREFIX:zones --enable <zone-name>"
        echo "• Enable all zones: dokku $PLUGIN_COMMAND_PREFIX:zones --enable --all"
    fi
    
    return 0
}
