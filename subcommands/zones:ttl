#!/usr/bin/env bash
source "$(dirname "$(cd "$(dirname "${BASH_SOURCE[0]}")" && pwd)")/config"
set -eo pipefail
[[ $DOKKU_TRACE ]] && set -x

# Load dokku functions if available
if [[ -f "$PLUGIN_CORE_AVAILABLE_PATH/common/functions" ]]; then
  source "$PLUGIN_CORE_AVAILABLE_PATH/common/functions"
fi

# Define missing functions if needed
if ! declare -f dokku_log_info1 >/dev/null 2>&1; then
  dokku_log_info1() { echo "-----> $*"; }
fi

if ! declare -f dokku_log_info2 >/dev/null 2>&1; then
  dokku_log_info2() { echo "=====> $*"; }
fi

if ! declare -f dokku_log_warn >/dev/null 2>&1; then
  dokku_log_warn() { echo " !     $*"; }
fi

if ! declare -f dokku_log_fail >/dev/null 2>&1; then
  dokku_log_fail() { echo " !     $*" >&2; exit 1; }
fi

source "$(dirname "$(cd "$(dirname "${BASH_SOURCE[0]}")" && pwd)")/functions"

service-zones-ttl-cmd() {
  #E get or set TTL (time-to-live) for a DNS zone in seconds
  #E dokku $PLUGIN_COMMAND_PREFIX:zones:ttl example.com
  #E dokku $PLUGIN_COMMAND_PREFIX:zones:ttl example.com 3600
  #E zones with custom TTL are checked before global TTL in hierarchy
  #E TTL hierarchy: domain-specific TTL -> zone TTL -> global TTL -> default (300)
  #A zone, zone to get or set TTL for (e.g., example.com)
  #A ttl, TTL value in seconds (60-86400), optional for get operation
  declare desc="get or set TTL (time-to-live) for a DNS zone in seconds"
  local cmd="$PLUGIN_COMMAND_PREFIX:zones:ttl"
  [[ "$1" == "$cmd" ]] && shift 1

  local ZONE="$1"
  local TTL_VALUE="$2"
  local ZONE_TTLS_FILE="$PLUGIN_DATA_ROOT/ZONE_TTLS"

  # Ensure plugin data directory exists
  [[ ! -d "$PLUGIN_DATA_ROOT" ]] && mkdir -p "$PLUGIN_DATA_ROOT"

  if [[ -z "$ZONE" ]]; then
    dokku_log_fail "Please specify a zone name"
  fi

  # Validate zone format (basic check)
  if [[ ! "$ZONE" =~ ^[a-zA-Z0-9.-]+\.[a-zA-Z]{2,}$ ]]; then
    dokku_log_fail "Zone must be a valid domain name (e.g., example.com)"
  fi

  if [[ -z "$TTL_VALUE" ]]; then
    # Get current TTL value for zone
    if [[ -f "$ZONE_TTLS_FILE" ]]; then
      local current_ttl
      current_ttl=$(grep "^$ZONE:" "$ZONE_TTLS_FILE" 2>/dev/null | cut -d: -f2)
      if [[ -n "$current_ttl" && "$current_ttl" =~ ^[0-9]+$ ]]; then
        echo "$current_ttl"
      else
        echo "No TTL configured for zone: $ZONE"
        return 1
      fi
    else
      echo "No TTL configured for zone: $ZONE"
      return 1
    fi
  else
    # Set TTL value for zone
    if [[ ! "$TTL_VALUE" =~ ^[0-9]+$ ]]; then
      dokku_log_fail "TTL value must be a positive integer (seconds)"
    fi

    if [[ "$TTL_VALUE" -lt 60 ]]; then
      dokku_log_fail "TTL value must be at least 60 seconds"
    fi

    if [[ "$TTL_VALUE" -gt 86400 ]]; then
      dokku_log_fail "TTL value must be no more than 86400 seconds (24 hours)"
    fi

    # Remove existing entry for this zone if it exists
    if [[ -f "$ZONE_TTLS_FILE" ]]; then
      grep -v "^$ZONE:" "$ZONE_TTLS_FILE" > "${ZONE_TTLS_FILE}.tmp" 2>/dev/null || touch "${ZONE_TTLS_FILE}.tmp"
      mv "${ZONE_TTLS_FILE}.tmp" "$ZONE_TTLS_FILE"
    fi

    # Add new TTL entry for zone
    echo "$ZONE:$TTL_VALUE" >> "$ZONE_TTLS_FILE"
    dokku_log_info1 "Zone TTL set for '$ZONE' to $TTL_VALUE seconds"
  fi
}

service-zones-ttl-cmd "$@"