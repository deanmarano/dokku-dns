#!/usr/bin/env bash
source "$(dirname "$(cd "$(dirname "${BASH_SOURCE[0]}")" && pwd)")/config"
set -eo pipefail
[[ $DOKKU_TRACE ]] && set -x

# Load dokku functions if available
if [[ -f "$PLUGIN_CORE_AVAILABLE_PATH/common/functions" ]]; then
  source "$PLUGIN_CORE_AVAILABLE_PATH/common/functions"
fi

# Define missing functions if needed
if ! declare -f dokku_log_info1 >/dev/null 2>&1; then
  dokku_log_info1() { echo "-----> $*"; }
fi

if ! declare -f dokku_log_info2 >/dev/null 2>&1; then
  dokku_log_info2() { echo "=====> $*"; }
fi

if ! declare -f dokku_log_warn >/dev/null 2>&1; then
  dokku_log_warn() { echo " !     $*"; }
fi

if ! declare -f dokku_log_fail >/dev/null 2>&1; then
  dokku_log_fail() { echo " !     $*" >&2; exit 1; }
fi

source "$(dirname "$(cd "$(dirname "${BASH_SOURCE[0]}")" && pwd)")/functions"

service-zones-add-cmd() {
  #E add DNS zone to auto-discovery for automatic app domain management
  #E dokku $PLUGIN_COMMAND_PREFIX:zones:add example.com
  #E dokku $PLUGIN_COMMAND_PREFIX:zones:add --all
  #E enables automatic discovery of app domains within the specified zone
  #E when apps have domains in this zone, they will be automatically managed
  #E use 'dokku $PLUGIN_COMMAND_PREFIX:add' to manually add specific apps
  #A zone, zone name to add to auto-discovery (optional with --all)
  #F --all, add all available zones to auto-discovery
  declare desc="add DNS zone to auto-discovery for automatic app domain management"
  local cmd="$PLUGIN_COMMAND_PREFIX:zones:add" argv=("$@")
  
  # Handle Dokku command routing - first argument will be the command name
  if [[ "$1" == "$cmd" ]]; then
    shift 1
  fi
  
  declare ZONE=""
  local all_zones=false
  
  # Parse arguments
  while [[ $# -gt 0 ]]; do
    case $1 in
      --all)
        all_zones=true
        shift
        ;;
      *)
        if [[ -z "$ZONE" ]]; then
          ZONE="$1"
        else
          dokku_log_fail "Unknown option: $1. Use <zone> or --all."
        fi
        shift
        ;;
    esac
  done
  
  # Validate arguments
  if [[ -z "$ZONE" && "$all_zones" == "false" ]]; then
    dokku_log_fail "Please specify a zone name or use --all flag"
  fi
  
  if [[ -n "$ZONE" && "$all_zones" == "true" ]]; then
    dokku_log_fail "Cannot specify both zone name and --all flag together"
  fi
  
  # Execute actions
  if [[ "$all_zones" == "true" ]]; then
    zones_add_all
  else
    zones_add_zone "$ZONE"
  fi
}

zones_add_zone() {
  local ZONE="$1"
  
  # Check if DNS provider is configured
  local PROVIDER_FILE="$PLUGIN_DATA_ROOT/PROVIDER"
  if [[ ! -f "$PROVIDER_FILE" ]]; then
    dokku_log_fail "No DNS provider configured. Run: dokku $PLUGIN_COMMAND_PREFIX:configure [provider]"
  fi
  
  local PROVIDER
  PROVIDER=$(cat "$PROVIDER_FILE")
  
  if [[ "$PROVIDER" != "aws" ]]; then
    dokku_log_fail "Zone management is currently only supported for AWS Route53 provider"
  fi
  
  # Validate AWS dependencies
  if ! command -v aws >/dev/null 2>&1; then
    dokku_log_fail "AWS CLI is not installed. Please install aws-cli to use AWS Route53 provider."
  fi
  
  if ! aws sts get-caller-identity >/dev/null 2>&1; then
    dokku_log_fail "AWS CLI is not configured or credentials are invalid."
  fi
  
  dokku_log_info2 "Adding zone to auto-discovery: $ZONE"
  
  # Get zone ID to verify it exists
  local ZONE_ID
  ZONE_ID=$(aws route53 list-hosted-zones --query "HostedZones[?Name=='${ZONE}.'].Id" --output text 2>/dev/null | sed 's|/hostedzone/||')
  
  if [[ -z "$ZONE_ID" ]] || [[ "$ZONE_ID" == "None" ]]; then
    dokku_log_fail "Zone '$ZONE' not found in Route53. Available zones:"
    aws route53 list-hosted-zones --query 'HostedZones[].Name' --output text 2>/dev/null | sed 's/\.$//g' | while read -r zone; do
      echo "  • $zone"
    done
    return 1
  fi
  
  # Mark zone as enabled for auto-discovery
  zones_set_enabled "$ZONE"
  
  dokku_log_info2 "✅ Zone '$ZONE' added to auto-discovery"
  
  echo
  echo "Next steps:"
  echo "• Add apps to DNS management: dokku $PLUGIN_COMMAND_PREFIX:add <app>"
  echo "• Sync DNS records: dokku $PLUGIN_COMMAND_PREFIX:sync <app>"
  echo "• Check status: dokku $PLUGIN_COMMAND_PREFIX:report"
}

zones_add_all() {
  # Check if DNS provider is configured
  local PROVIDER_FILE="$PLUGIN_DATA_ROOT/PROVIDER"
  if [[ ! -f "$PROVIDER_FILE" ]]; then
    dokku_log_fail "No DNS provider configured. Run: dokku $PLUGIN_COMMAND_PREFIX:configure [provider]"
  fi
  
  local PROVIDER
  PROVIDER=$(cat "$PROVIDER_FILE")
  
  if [[ "$PROVIDER" != "aws" ]]; then
    dokku_log_fail "Zone management is currently only supported for AWS Route53 provider"
  fi
  
  # Validate AWS dependencies
  if ! command -v aws >/dev/null 2>&1; then
    dokku_log_fail "AWS CLI is not installed. Please install aws-cli to use AWS Route53 provider."
  fi
  
  if ! aws sts get-caller-identity >/dev/null 2>&1; then
    dokku_log_fail "AWS CLI is not configured or credentials are invalid."
  fi
  
  dokku_log_info2 "Adding all zones to auto-discovery"
  
  # Get all hosted zones
  local ZONES
  ZONES=$(aws route53 list-hosted-zones --query 'HostedZones[].Name' --output text 2>/dev/null | tr '\t' ' ' | sed 's/\.$//g')
  
  if [[ -z "$ZONES" ]]; then
    dokku_log_info1 "No hosted zones found in Route53"
    return 0
  fi
  
  local zones_processed=0
  
  for zone in $ZONES; do
    dokku_log_info1 "Adding zone: $zone"
    zones_processed=$((zones_processed + 1))
    
    # Add this zone to auto-discovery
    zones_set_enabled "$zone"
    echo
  done
  
  dokku_log_info2 "Add-all complete"
  dokku_log_info1 "Zones added to auto-discovery: $zones_processed"
  
  echo
  echo "Next steps:"
  echo "• Add apps to DNS management: dokku $PLUGIN_COMMAND_PREFIX:add <app>"
  echo "• Sync DNS records: dokku $PLUGIN_COMMAND_PREFIX:sync <app>"
  echo "• Check status: dokku $PLUGIN_COMMAND_PREFIX:report"
}

service-zones-add-cmd "$@"