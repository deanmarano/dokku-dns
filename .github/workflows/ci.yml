---
name: CI

# yamllint disable-line rule:truthy
on:
  pull_request:
    branches:
      - "*"
  push:
    branches:
      - main

concurrency:
  group: build-${{ github.event.pull_request.number || github.ref }}
  cancel-in-progress: true

jobs:
  unit-tests:
    name: Unit Tests
    runs-on: ubuntu-24.04
    env:
      DOKKU_VERSION: master

    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - uses: actions/setup-python@v5
        with:
          python-version: "3.13"

      - run: make setup

      - run: sudo sysctl -w vm.max_map_count=262144

      - run: |
          git fetch -q origin main
          changed=$(git --no-pager diff --name-only $GITHUB_SHA..origin/main)
          if [ $changed = "Dockerfile" ]; then
            echo "Please run 'make generate' to update the image version in the README.md"
          else
            make generate
            if ! git diff --quiet README.md; then
              echo "Please run 'make generate'"
              git status --short
              git --no-pager diff README.md
              exit 1
            fi
          fi

      - run: make test

      - uses: actions/upload-artifact@v4
        if: failure()
        with:
          name: unit-test-results
          path: test-results

  docker-integration-tests:
    name: Docker Integration Tests
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3
      
    - name: Install Docker Compose
      run: |
        sudo curl -L "https://github.com/docker/compose/releases/download/v2.24.1/docker-compose-$(uname -s)-$(uname -m)" -o /usr/local/bin/docker-compose
        sudo chmod +x /usr/local/bin/docker-compose
        docker-compose --version
        
    - name: Cache Docker layers
      uses: actions/cache@v4
      with:
        path: /tmp/.buildx-cache
        key: ${{ runner.os }}-buildx-${{ github.sha }}
        restore-keys: |
          ${{ runner.os }}-buildx-
        
    - name: Build Docker images with caching
      run: |
        echo "üèóÔ∏è Building Docker test images with layer caching..."
        # Export cache location for buildx
        export BUILDX_CACHE_FROM="type=local,src=/tmp/.buildx-cache"
        export BUILDX_CACHE_TO="type=local,dest=/tmp/.buildx-cache-new,mode=max"
        
        # Use buildx for better caching
        docker buildx create --use --name builder || true
        docker buildx build \
          --cache-from="$BUILDX_CACHE_FROM" \
          --cache-to="$BUILDX_CACHE_TO" \
          --load \
          --tag dokku-dns-test:latest \
          -f tests/docker/Dockerfile .
          
        # Tag for docker-compose
        docker tag dokku-dns-test:latest tests-docker-test-runner:latest
        
        # Move cache to preserve for next build
        rm -rf /tmp/.buildx-cache
        mv /tmp/.buildx-cache-new /tmp/.buildx-cache || true
        
        echo "‚úÖ Docker images built successfully with caching"
        
    - name: Run integration tests
      run: |
        chmod +x ./scripts/test-docker.sh
        echo "üß™ Running Docker integration tests..."
        ./scripts/test-docker.sh
      
    - name: Upload test logs on failure
      if: failure()
      uses: actions/upload-artifact@v4
      with:
        name: docker-test-logs
        path: |
          *.log
          docker-compose.*.yml
        retention-days: 7
