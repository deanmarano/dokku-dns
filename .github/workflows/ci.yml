---
name: CI

# yamllint disable-line rule:truthy
on:
  pull_request:
    branches:
      - "*"
  push:
    branches:
      - main

concurrency:
  group: build-${{ github.event.pull_request.number || github.ref }}
  cancel-in-progress: true

jobs:
  unit-tests:
    name: Unit Tests
    runs-on: ubuntu-24.04
    env:
      DOKKU_VERSION: master

    steps:
      - uses: actions/checkout@v5
        with:
          fetch-depth: 0

      - uses: actions/setup-python@v5
        with:
          python-version: "3.13"

      - name: Install dependencies
        run: |
          # Install system dependencies for testing
          sudo apt-get update -qq
          sudo apt-get install -qq -y shellcheck bats

      - name: Generate README and run linting in parallel
        run: |
          # Run README generation check
          git fetch -q origin main
          changed=$(git --no-pager diff --name-only $GITHUB_SHA..origin/main)
          if [ "$changed" = "Dockerfile" ]; then
            echo "Please run 'make generate' to update the image version in the README.md"
          else
            make generate &
            README_PID=$!
            
            # Run linting in parallel
            make lint &
            LINT_PID=$!
            
            # Wait for both to complete
            wait $README_PID
            wait $LINT_PID
            
            # Check README changes
            if ! git diff --quiet README.md; then
              echo "Please run 'make generate'"
              git status --short
              git --no-pager diff README.md
              exit 1
            fi
          fi

      - name: Run unit tests
        run: make unit-tests

      - uses: actions/upload-artifact@v4
        if: failure()
        with:
          name: unit-test-results
          path: |
            *.log
            tmp/test-results/
          if-no-files-found: ignore

  docker-integration-tests:
    name: Docker Integration Tests
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v5
      
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3
      
    - name: Install Docker Compose
      run: |
        sudo curl -L "https://github.com/docker/compose/releases/download/v2.24.1/docker-compose-$(uname -s)-$(uname -m)" -o /usr/local/bin/docker-compose
        sudo chmod +x /usr/local/bin/docker-compose
        docker-compose --version
        
    - name: Build Docker images with registry caching
      uses: docker/build-push-action@v6
      with:
        context: .
        file: ./tests/docker/Dockerfile
        push: false
        load: true
        tags: |
          tests-docker-test-runner:latest
        cache-from: type=gha
        cache-to: type=gha,mode=max
        
    - name: Start test containers
      run: |
        echo "🚀 Starting test containers and waiting for readiness..."
        chmod +x ./scripts/test-docker.sh
        # Start containers in detached mode and wait for readiness
        docker-compose -f tests/docker/docker-compose.yml up -d
        
        # Wait for Dokku container to be accessible
        echo "⏳ Waiting for Dokku container to be ready..."
        timeout 300 bash -c '
          while true; do
            # Check if Dokku container is responding
            if docker exec dokku-local dokku help >/dev/null 2>&1; then
              echo "✅ Dokku container is ready!"
              break
            fi
            echo "🔄 Still waiting for Dokku to be ready..."
            sleep 5
          done
        '
        
        # Give test-runner a moment to initialize
        echo "⏳ Initializing test environment..."
        sleep 10
        
    - name: Run integration tests
      run: |
        echo "🧪 Running integration tests..."
        # Use the integration test system with Docker orchestrator
        ./scripts/test-docker.sh all --direct
      
    - name: Stop test containers
      if: always()
      run: |
        echo "🧹 Cleaning up test containers..."
        docker-compose -f tests/docker/docker-compose.yml down -v || true
        
    - name: Upload test logs on failure
      if: failure()
      uses: actions/upload-artifact@v4
      with:
        name: docker-test-logs
        path: |
          *.log
          docker-compose.*.yml
        retention-days: 7
