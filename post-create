#!/usr/bin/env bash
set -eo pipefail
[[ $DOKKU_TRACE ]] && set -x

# DNS Plugin - Post-Create Trigger
# Automatically sets up DNS management when an app is created

# Source plugin configuration
PLUGIN_BASE_PATH="$(cd "$(dirname "${BASH_SOURCE[0]}")" && pwd)"
source "$PLUGIN_BASE_PATH/config"

# Load functions if available
if [[ -f "$PLUGIN_CORE_AVAILABLE_PATH/common/functions" ]]; then
  source "$PLUGIN_CORE_AVAILABLE_PATH/common/functions"
fi

# Define missing functions if needed
if ! declare -f dokku_log_info1 >/dev/null 2>&1; then
  dokku_log_info1() { echo "-----> $*"; }
fi

if ! declare -f dokku_log_info2 >/dev/null 2>&1; then
  dokku_log_info2() { echo "=====> $*"; }
fi

if ! declare -f dokku_log_warn >/dev/null 2>&1; then
  dokku_log_warn() { echo " !     $*"; }
fi

# Load plugin functions
TRIGGER_BASE_PATH="$(cd "$(dirname "${BASH_SOURCE[0]}")" && pwd)"
source "$TRIGGER_BASE_PATH/functions"

# Main trigger logic
main() {
  local APP="$1"

  # Check if triggers are enabled
  local TRIGGERS_ENABLED_FILE="$PLUGIN_DATA_ROOT/TRIGGERS_ENABLED"
  if [[ ! -f "$TRIGGERS_ENABLED_FILE" ]]; then
    # Triggers are disabled - exit silently
    return 0
  fi

  # Skip if no app provided
  [[ -z "$APP" ]] && return 0

  # Inform user that DNS management is available
  dokku_log_info1 "DNS: App '$APP' created. DNS records will be managed automatically when domains are added."
}

# Run if called directly (not sourced)
if [[ "${BASH_SOURCE[0]}" == "${0}" ]]; then
  main "$@"
fi
