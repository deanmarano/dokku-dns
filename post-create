#!/usr/bin/env bash
set -eo pipefail
[[ $DOKKU_TRACE ]] && set -x

# DNS Plugin - Post-Create Trigger
# Automatically sets up DNS management when an app is created

# Source plugin configuration
PLUGIN_BASE_PATH="$(cd "$(dirname "${BASH_SOURCE[0]}")" && pwd)"
source "$PLUGIN_BASE_PATH/config"

# Load functions if available
if [[ -f "$PLUGIN_CORE_AVAILABLE_PATH/common/functions" ]]; then
  source "$PLUGIN_CORE_AVAILABLE_PATH/common/functions"
fi

# Define missing functions if needed
if ! declare -f dokku_log_info1 >/dev/null 2>&1; then
  dokku_log_info1() { echo "-----> $*"; }
fi

if ! declare -f dokku_log_info2 >/dev/null 2>&1; then
  dokku_log_info2() { echo "=====> $*"; }
fi

if ! declare -f dokku_log_warn >/dev/null 2>&1; then
  dokku_log_warn() { echo " !     $*"; }
fi

# Load plugin functions
TRIGGER_BASE_PATH="$(cd "$(dirname "${BASH_SOURCE[0]}")" && pwd)"
source "$TRIGGER_BASE_PATH/functions"

# Main trigger logic
main() {
  local APP="$1"
  
  # Check if triggers are enabled
  local TRIGGERS_ENABLED_FILE="$PLUGIN_DATA_ROOT/TRIGGERS_ENABLED"
  if [[ ! -f "$TRIGGERS_ENABLED_FILE" ]]; then
    # Triggers are disabled - exit silently
    return 0
  fi
  
  # Skip if no app provided
  [[ -z "$APP" ]] && return 0
  
  # AWS is always the provider now - no configuration check needed
  
  dokku_log_info1 "DNS: Checking if app '$APP' should be added to DNS management..."
  
  # Get app domains (may be empty for new apps)
  local APP_DOMAINS=""
  if command -v dokku >/dev/null 2>&1; then
    APP_DOMAINS=$(dokku domains:report "$APP" --domains-app-vhosts 2>/dev/null || echo "")
  fi
  
  if [[ -z "$APP_DOMAINS" ]]; then
    dokku_log_info1 "DNS: No domains configured for '$APP' yet. DNS will be available when domains are added."
    return 0
  fi
  
  # Check if app is already managed by DNS
  if is_app_dns_managed "$APP"; then
    dokku_log_info1 "DNS: App '$APP' is already managed by DNS"
    return 0
  fi
  
  # Check if any domains are in enabled zones
  local domains_in_enabled_zones=()
  
  # Parse domains and check if they are in enabled zones  
  for domain in $APP_DOMAINS; do
    if is_domain_in_enabled_zone "$domain"; then
      domains_in_enabled_zones+=("$domain")
    fi
  done
  
  if [[ ${#domains_in_enabled_zones[@]} -eq 0 ]]; then
    dokku_log_info1 "DNS: No domains for '$APP' are in enabled zones. Skipping automatic DNS setup."
    dokku_log_info1 "DNS: Use 'dokku dns:zones:enable <zone>' to enable zones or manually add with 'dokku dns:apps:enable $APP'"
    return 0
  fi
  
  # Auto-add app to DNS management if it has domains in enabled zones
  dokku_log_info1 "DNS: Found ${#domains_in_enabled_zones[@]} domain(s) in enabled zones. Adding '$APP' to DNS management"
  if dns_add_app_domains "$APP"; then
    dokku_log_info1 "DNS: App '$APP' added to DNS management successfully"
    
    # Automatically sync the app to make DNS records active
    dokku_log_info1 "DNS: Syncing DNS records for '$APP'..."
    if command -v dokku >/dev/null 2>&1; then
      if dokku "$PLUGIN_COMMAND_PREFIX:sync" "$APP" >/dev/null 2>&1; then
        dokku_log_info1 "DNS: All domains for '$APP' synced successfully"
      else
        dokku_log_warn "DNS: Failed to sync DNS records automatically"
        dokku_log_info1 "DNS: Manual sync with: dokku $PLUGIN_COMMAND_PREFIX:sync $APP"
      fi
    else
      dokku_log_info1 "DNS: Manual sync with: dokku $PLUGIN_COMMAND_PREFIX:sync $APP"
    fi
  else
    dokku_log_warn "DNS: Failed to add app '$APP' to DNS management"
  fi
}

# Run if called directly (not sourced)
if [[ "${BASH_SOURCE[0]}" == "${0}" ]]; then
  main "$@"
fi